{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASG,kBAAkB,SAClCC,KAAMJ,SAASG,kBAAkB,QACjCE,OAAQL,SAASG,kBAAkB,UACnCG,IAAKN,SAASC,cAAc,WAG9BH,EAAKC,KAAKQ,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACFX,EAAKQ,IAAII,aAAa,WAAY,QAClC,IAAML,EAASM,OAAOb,EAAKO,OAAO,GAAGO,OAC/BR,EAAOO,OAAOb,EAAKM,KAAK,GAAGQ,OAC3BC,EAAeF,OAAOb,EAAKI,MAAM,GAAGU,OACtCE,EAAQD,EACRE,EAAW,EAEfC,YAAW,WACT,IAAMC,EAAUC,aAAY,WAE1BC,EAAcJ,EAAUD,GACrBM,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUpB,EAAKmB,EAALnB,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANxB,EAAM,M,IAElEyB,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUpB,EAAKmB,EAALnB,MACnBqB,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAmCF,OAAfJ,EAAS,QAAYI,OAANxB,EAAM,M,IAGrEY,GAASV,GACTW,GAAY,IACIV,EAAS,GAAKwB,cAAcZ,E,GAC3Cb,E,GACFS,GAEHG,YAAW,WACTlB,EAAKQ,IAAIwB,gBAAgB,W,GACxBhB,EAAQV,EAAOC,E,IAIpB,IAAMc,EAAgB,SAACG,EAAUpB,GAE/B,OAAO,IAAI6B,SAAQ,SAACC,EAASC,GAELC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEV,WAAUpB,UAEpB+B,EAAO,CAAEX,WAAUpB,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.getElementsByName(\"delay\"),\n  step: document.getElementsByName(\"step\"),\n  amount: document.getElementsByName(\"amount\"),\n  btn: document.querySelector(\"button\"),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  refs.btn.setAttribute('disabled', 'true');\n  const amount = Number(refs.amount[0].value);\n  const step = Number(refs.step[0].value);\n  const delayDefault = Number(refs.delay[0].value);\n  let delay = delayDefault;\n  let position = 1;\n\n  setTimeout(() => {\n    const timerId = setInterval(() => {\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        },\n        ).catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delay += step;\n      position += 1;\n      if (position == amount + 1) { clearInterval(timerId) }\n    }, step);\n  }, delayDefault);\n\n  setTimeout(() => {\n    refs.btn.removeAttribute('disabled');\n  }, delay + step * amount);\n  \n}\n\nconst createPromise = (position, delay) => {\n\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","getElementsByName","step","amount","btn","addEventListener","e","preventDefault","setAttribute","Number","value","delayDefault","delay1","position1","setTimeout","timerId","setInterval","$ce04d3a99e08e73b$var$createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval","removeAttribute","Promise","resolve","reject","Math","random"],"version":3,"file":"03-promises.05e3e4fa.js.map"}